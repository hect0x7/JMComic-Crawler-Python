from jmcomic import *
from jmcomic.cl import JmcomicUI

# 下方填入你要下载的本子的id，一行一个，每行的首尾可以有空白字符
jm_albums = '''
id
1207964
631273
435689
643158
618703
620808
628546
126
638627
643308
592437
643130
624151
494679
506291
642026
639801
641132
627137
638671
638685
637736
458391
485542
569092
620863
625789
401727
637421
637719
636721
628562
595531
622722
628389
629138
625243
627904
626314
626220
626490
625795
604109
604787
611605
615389
620234
620897
625759
226836
410272
620677
620678
535938
617912
612198
612203
504833
224406
507769
505203
419967
498708
442179
158
584491
298716
138145
565384
603162
603163
603360
603108
581947
594763
580934
595981
595465
571148
596436
588987
581079
579404
564304
576557
582099
432288
546303
560580
582718
548405
453056
509853
432910
/*
577637
433651
540468
539382
258170
388960
291029
392330
178271
211921
394149
196314
393906
269672
385760
389781
384716
179365
388563
390353
389479
391645
74
391501
244664
348856
374035
388874
389278
389281
375246
386945
339116
122133
301716
180771
203314
344326
258313
382558
356177
380358
387096
94774
385405
123762
317107
150755
308029
381424
149116
384248
384234
382092
378773
317492
348126
302261
191991
371101
284946
320243
309898
165321
152327
125628
199628
384044
383676
382567
372785
161031
382396
371322
368758
383378
382752
381566
300993
349251
381453
378254
363851
379567
143092
368607
379079
377795
325295
318730
179723
343898
263320
374554
375619
377438
183992
377158
376126
308812
316811
376015
100335
376555
374565
374031
373226
368660
373408
372723
372720
316267
354998
372447
368640
371794
369941
113237
369387
370634
369456
244090
5058
36846
177959
221019
323907
367530
367550
365865
203268
361735
365982
291210
258442
362452
211666
146270
236009
361955
601117
349461
136433
362471
357656
314459
362217
361176
361995
354989
361958
361268
349255
338179
226789
137131
361163
232088
360997
340306
266701
350099
349982
348168
231573
360275
314460
360015
289566
116093
147936
305886
292414
354574
359559
355588
358950
358842
351384
353608
263106
310185
356446
358799
339685
357781
356453
358501
358521
343918
351841
216624
218570
356989
88122
206909
342923
85836
355912
280579
301250
84136
138139
306826
355674
254338
355003
129744
273002
355333
114484
349689
307111
341471
353553
205537
353577
337574
349770
353586
150716
330468
351362
308620
352727
235236
344291
76674
83888
94778
305515
343530
351587
346784
188963
350786
349361
342313
46552
90526
182135
133899
347117
140175
330778
348850
347789
245807
348119
348135
230547
345063
319865
288551
346393
303714
141796
346821
345433
345437
319476
306763
305888
344555
345052
341978
342569
213541
123525
345013
343934
345026
77416
336267
342328
342332
90478
12985
94447
308595
261943
298467
301771
390371
338706
324781
337364
339379
339378
339115
339703
339997
340838
340798
310623
338838
340027
340213
340343
340806
260977
339981
1011
147871
335744
279762
306825
149080
139743
139677
141194
187823
335208
290898
335772
316438
335492
182175
151979
188409
332065
240348
226250
332019
332034
331438
325316
324903
326272
330257
330537
330293
326930
313919
313959
308447
310161
308584
308864
305745
237187
148915
308500
290815
304592
307566
294823
305638
305879
305552
305840
304209
123201
305389
136914
305014
305424
305143
281801
292403
277673
286340
302736
232765
304763
304595
304666
148689
303623
104525
304626
20556
304614
304640
122953
123936
291016
303162
287330
255485
203989
304139
3397
304447
304553
302214
304461
304523
301822
302216
302767
302808
302815
251258
299791
302531
95979
178337
178166
152203
189593
212018
225166
302781
301917
236553
301940
302575
149675
151465
301484
301292
301318
266374
105549
222492
301212
301213
300708
296826
121653
181308
293493
257845
274301
281074
286365
286105
282483
283200
230657
248170
285106
281180
249785
284185
279430
284999
222868
278031
123272
107210
177701
3292
3270
95762
3282
3220
3221
212914
239676
276265
208271
254557
272641
274295
188678
267950
276010
277916
277915
276588
197874
267567
9653
1180
260091
7790
25285
4067
33241
33100
275758
124691
179823
273693
274792
275615
250276
188935
190006
232094
272690
273567
273371
274112
274728
265888
266696
268631
268835
272323
268754
135845
271767
200022
256175
271588
271778
122916
146168
137906
232052
262464
271264
269406
195487
195486
270369
243055
229151
271126
23271
270973
271249
208081
235413
119076
213233
220644
271284
243908
270984
246117
248551
264073
255469
205606
65123
263365
113766
232698
270177
217655
270752
5887
27037
27630
265824
180372
187571
256005
239332
226080
235197
103199
270650
270528
*/


'''

# 单独下载章节
jm_photos = '''



'''


def env(name, default, trim=('[]', '""', "''")):
    import os
    value = os.getenv(name, None)
    if value is None or value == '':
        return default

    for pair in trim:
        if value.startswith(pair[0]) and value.endswith(pair[1]):
            value = value[1:-1]

    return value


def get_id_set(env_name, given):
    aid_set = set()
    for text in [
        given,
        (env(env_name, '')).replace('-', '\n'),
    ]:
        aid_set.update(str_to_set(text))

    return aid_set


def main():
    album_id_set = get_id_set('JM_ALBUM_IDS', jm_albums)
    photo_id_set = get_id_set('JM_PHOTO_IDS', jm_photos)

    helper = JmcomicUI()
    helper.album_id_list = list(album_id_set)
    helper.photo_id_list = list(photo_id_set)

    option = get_option()
    helper.run(option)
    option.call_all_plugin('after_download')


def get_option():
    # 读取 option 配置文件
    option = create_option(os.path.abspath(os.path.join(__file__, '../../assets/option/option_workflow_download.yml')))

    # 支持工作流覆盖配置文件的配置
    cover_option_config(option)

    # 把请求错误的html下载到文件，方便GitHub Actions下载查看日志
    log_before_raise()

    return option


def cover_option_config(option: JmOption):
    dir_rule = env('DIR_RULE', None)
    if dir_rule is not None:
        the_old = option.dir_rule
        the_new = DirRule(dir_rule, base_dir=the_old.base_dir)
        option.dir_rule = the_new

    impl = env('CLIENT_IMPL', None)
    if impl is not None:
        option.client.impl = impl

    suffix = env('IMAGE_SUFFIX', None)
    if suffix is not None:
        option.download.image.suffix = fix_suffix(suffix)


def log_before_raise():
    jm_download_dir = env('JM_DOWNLOAD_DIR', workspace())
    mkdir_if_not_exists(jm_download_dir)

    def decide_filepath(e):
        resp = e.context.get(ExceptionTool.CONTEXT_KEY_RESP, None)

        if resp is None:
            suffix = str(time_stamp())
        else:
            suffix = resp.url

        name = '-'.join(
            fix_windir_name(it)
            for it in [
                e.description,
                current_thread().name,
                suffix
            ]
        )

        path = f'{jm_download_dir}/【出错了】{name}.log'
        return path

    def exception_listener(e: JmcomicException):
        """
        异常监听器，实现了在 GitHub Actions 下，把请求错误的信息下载到文件，方便调试和通知使用者
        """
        # 决定要写入的文件路径
        path = decide_filepath(e)

        # 准备内容
        content = [
            str(type(e)),
            e.msg,
        ]
        for k, v in e.context.items():
            content.append(f'{k}: {v}')

        # resp.text
        resp = e.context.get(ExceptionTool.CONTEXT_KEY_RESP, None)
        if resp:
            content.append(f'响应文本: {resp.text}')

        # 写文件
        write_text(path, '\n'.join(content))

    JmModuleConfig.register_exception_listener(JmcomicException, exception_listener)


if __name__ == '__main__':
    main()
